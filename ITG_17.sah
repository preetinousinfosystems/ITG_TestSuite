_include("ITG_Common_Utils.sah");
_include("ITG_CreateProject_Utils.sah");
_include("ITG_Common_Properties.sah");

_navigateTo($ITGApplicationURL);

var $TP_Username = "sahiclientA";
var $Password = "Pa55Word!!";

var $Agency = "ITG";
var $Printer = "ITG Print Management";
var $Filename1 = "Testree";
var $Filename2 = "Proj File";
var $ProjRef = "";
var $BriefRef = "";
var $BriefReference = new Array();

var $ta = _testcase("Step A", "Create a New Project and submit briefs");
$ta.start();

	CreateNewProject($Agency, $Printer, $Filename1, $Filename2);
	$ProjRef = getProjRefValue();
	CreateMoreBriefs();
	SaveLineForAllBriefs();
	$BriefReference = getBriefValues();
	$BriefRef = $BriefReference[0];
	printBriefValues();
	SubmitAllBriefs();
	Logout();
	
$ta.end();

var $tb = _testcase("Step B", "Approve the new Project > for ITG Agency Project");
$tb.start();
	PrintBuyer_NavigateToNewProject($ProjRef);
	PrintBuyer_ApproveAllBriefs();
	Logout();
	
$tb.end();

var $tc = _testcase("Step C", "ITG Agency Rejects All Briefs");
$tc.start();
	ITGAgency_NavigateToNewProject($ProjRef);
	ITGAgency_RejectAllBriefs();
	Logout();
	
$tc.end();

var $td = _testcase("Step D", "Print Buyer Submits briefs to Project Owner");
$td.start();
	PrintBuyer_NavigateToITGAgencyRejectedBriefs($ProjRef);
	PrintBuyer_ResubmitsBriefsToProjectOwner();
	Logout();
	
$td.end();

var $t1 = _testcase("Step 1", "Login as Client User and navigate to Workflow > Key Actions > ITG Rejected Briefs > Click on Briefs Hyperlink");
$t1.start();

	LoginAsClientUserandNavigateToKeyActions($TP_Username, $Password);
	Common_NavigateToClientWorkflow();
	_click($_LINK_ITG_REJECTED_BRIEFS);
	Assert_TableFieldsITGRejectBriefsProjectLevel();
	setHundredRecordsPerPage();
	_click(_link($ProjRef));
	
$t1.end();

var $t2 = _testcase("Step 2", "Click on  the Comments link of a brief in the 'ITG Agency Rejected Brief details page'");
$t2.start();
		
	Assert_TableFieldsITGRejectBriefsProjectLevel();
	Assert_ITGRejectBriefs_BriefTableFields();
	_click(_link("/.*/", _rightOf(_cell($BriefRef)), _under($_TABLEHEADER_REJECT_COMMENTS)));
	_assertEqual("Comments", _getText(_heading2("Comments", _in($_DIV_REJECTED_COMMENTS_OVERLAY))));
	
	
$t2.end();

var $t3 = _testcase("Step 3", "Verify the content of the Comment Overlay");
$t3.start();
		
	_assert(_isVisible(_span("History", _in($_DIV_REJECTED_COMMENTS_OVERLAY))));
	_assertExists(_link("/.*/", _in($_DIV_COMMENT_HISTORY_TAB_AREA)));
	_assertExists(_div("note-detail", _in($_DIV_COMMENT_HISTORY_TAB_AREA)));
	_click($_SPAN_CLOSE);
	_assertNotTrue(_isVisible($_DIV_REJECTED_COMMENTS_OVERLAY));
	Logout();
		
$t3.end();


